Unknown0, 000000000274E9D0 0 -> {0}
Unknown1, 000000000274EB60 1 -> {1}
Unknown2, 000000000274EA30 2 -> {2}
Unknown3, 000000000274EA00 3 -> {3}
Unknown4, 000000000274EA60 4 -> {4}
Unknown5, 000000000274ECB0 5 -> {5}
Empty, 000000000274EB80 6 -> {6}
Empty, 000000000274EC90 7 -> {7}
Unknowna, 000000000274EC60 a -> {a}
Unknownb, 000000000274EC30 b -> {b}
Nop, 000000000276BDD0 12 -> {12, 13, 14, 16, 18, 1a, 1e, 21, 23, 25, 27, 28, 2b, 2c, 2d, 2f, 30, 3d, 3e, 3f, 41, 43, 48, 4f, 50, 52, 53, 5b, 5e, 66, 67, 69, 6d, 73, 74, 75, 79, 7f, 80, 83, 84, 86, 87, 88, 90, 97, 99, 9c, a3, a5, a8, aa, ab, ac, af, b2, b3, b6, bd, bf, c3, c6, cb, cd, d1, d2, d5, d6, d8, db, de, df, e0, e2, e5, e8, ec, ee, ef, f1, f4, f6, f8, fa, fc, ff, 103, 108, 109, 10b, 111, 115, 11a, 121, 124, 127, 128, 12b, 12e, 12f, 131, 132, 135, 139, 13f, 140, 143, 148, 14a, 14d, 14f, 153, 156, 158, 159, 15b, 15c, 15d, 15e, 160, 161, 163, 166, 16b, 16c, 173, 174, 176, 17a, 17b, 185, 188, 18b, 18c, 18d, 18f, 191, 195, 19b, 19c, 19e, 19f, 1a0, 1a2, 1a4, 1a7, 1ad, 1ae, 1af, 1b3, 1b5, 1b7, 1b8, 1b9, 1bc, 1c3, 1c7, 1ca, 1cb, 1cc, 1d1, 1d5, 1dd, 1e0, 1e1, 1e5, 1e7, 1ea, 1ef, 1fa, 1fc, 1fd, 203, 20b, 20c, 20e, 214, 215, 216, 218, 221, 225, 226, 227, 229, 22c, 22e, 233, 234, 239, 23b, 23d, 240, 244, 245, 247, 24b, 24d, 254, 256, 258, 259, 25b, 25e, 25f, 263, 266, 267, 268, 26a, 26d, 271, 273, 277, 27a, 27b, 27f, 281, 282, 286, 289, 28a, 292, 297, 298, 299, 29b, 29e, 2a0, 2a1, 2a4, 2ac, 2ae, 2b0, 2b2, 2b5, 2b8, 2ba, 2bb, 2c4, 2c6, 2c7, 2c8, 2c9, 2cb, 2cc, 2cd, 2ce, 2d0, 2d1, 2d4, 2d5, 2d7, 2d8, 2da, 2e3, 2e4, 2e8, 2e9, 2ea, 2ec, 2f0, 2f5, 2f9, 2fa, 2fd, 301, 302, 305, 306, 308, 309, 30d, 310, 311, 313, 317, 318, 319, 31b, 31d, 31f, 322, 328, 329, 32a, 32c, 32d, 32e, 336, 339, 33c, 33f, 343, 346, 348, 34f, 351, 352, 353, 355, 362, 363, 367, 368, 369, 36a, 370, 373, 378, 37a, 37e, 37f, 382, 384, 387, 38b, 38d, 38e, 38f, 393, 398, 39a, 3a1, 3a3, 3a4, 3a5, 3a6, 3a8, 3a9, 3aa, 3ac, 3ad, 3af, 3b4, 3bc, 3bf, 3c2, 3c5, 3c7, 3ca, 3d0, 3d2, 3d5, 3d6, 3d7, 3d9, 3df, 3e1, 3e2, 3ea, 3ec, 3ef, 3f0, 3f3, 3f4, 3fe, 404, 407, 408, 411, 412, 413, 416, 419, 41a, 41c, 41d, 420, 421, 422, 423, 427, 429, 42b, 42c, 431, 437, 438, 439, 43a, 43c, 43f, 441, 443, 444, 445, 44a, 44d, 44f, 453, 456, 457, 458, 459, 45a, 460, 466, 46a, 46b, 46c, 46e, 474, 477, 47a, 47e, 47f, 480, 485, 488, 48c, 48e, 490, 493, 494, 495, 497, 498, 49b, 49f, 4ab, 4ac, 4ad, 4ae, 4b1, 4bc, 4bf, 4c3, 4c6, 4cb, 4cd, 4d4, 4d6, 4d9, 4dc, 4de, 4e2, 4e3, 4e5, 4e8, 4e9, 4ee, 4f4, 4f6, 4fa, 4fe, 4ff, 500, 501, 504, 506, 507, 508, 50f, 511, 515, 517, 518, 519, 51d, 51e, 521, 523, 52a, 52c, 52e, 532, 535, 538, 539, 53a, 540, 545, 546, 54a, 54b, 550, 553, 554, 555, 559, 55a, 55e, 55f, 562, 563, 569, 56b, 56c, 56f, 570, 575, 576, 577, 579, 57f, 580, 581, 587, 588, 58f, 592, 59f, 5a1, 5a2, 5a4, 5a7, 5ab, 5af, 5b0, 5b1, 5b5, 5b8, 5b9, 5bc, 5be, 5c1, 5c3, 5c5, 5c6, 5c7, 5cd, 5ce, 5cf, 5d3, 5d5, 5dc, 5df, 5e6, 5e7, 5e8, 5ee, 5ef, 5f0, 5f2, 5f3, 5f5, 5f6, 5f7, 5fa, 5fe, 5ff, 600, 603, 609, 60e, 611, 612, 613, 614, 615, 619, 61b, 61d, 61f, 620, 626, 62b, 62c, 632, 633, 634, 636, 639, 63b, 63c, 63e, 641, 648, 64a, 64c, 64e, 651, 658, 659, 65b, 65c, 660, 661, 664, 665, 666, 669, 66c, 66d, 66f, 671, 674, 676, 677, 678, 67a, 682, 685, 68e, 68f, 691, 695, 697, 698, 699, 69c, 69d, 6a4, 6a6, 6a7, 6aa, 6af, 6b0, 6b3, 6bc, 6bd, 6bf, 6c2, 6c3, 6c7, 6c9, 6ca, 6cb, 6cc, 6ce, 6d0, 6d6, 6d8, 6d9, 6db, 6dc, 6dd, 6de, 6e0, 6e1, 6e2, 6e3, 6e5, 6e7, 6f0, 6f3, 6f6, 6f8, 6f9, 6fb, 6fc, 701, 704, 706, 70d, 710, 711, 713, 71c, 71f, 724, 726, 728, 731, 733, 737, 738, 73b, 73c, 73d, 73e, 740, 742, 743, 748, 750, 751, 754, 758, 75b, 75e, 764, 76e, 76f, 772, 77b, 77e, 77f, 783, 784, 785, 795, 79a, 79b, 79e, 7a0, 7a4, 7a6, 7a8, 7ac, 7ae, 7af, 7b0, 7b1, 7b2, 7b4, 7b6, 7b8, 7ba, 7bc, 7bd, 7c0, 7c2, 7c5, 7c7, 7cb, 7cc, 7cd, 7ce, 7cf, 7d2, 7d4, 7d5, 7d7, 7d9, 7de, 7df, 7e3, 7e5, 7e7, 7e8, 7ec, 7ed, 7f3, 7f4, 7fc, 802, 806, 808, 812, 813, 817, 818, 819, 81c, 81e, 820, 821, 822, 823, 827, 833, 835, 836, 838, 83c, 83e, 83f, 840, 845, 847, 848, 849, 84b, 84d, 84e, 84f, 853, 854, 855, 857, 858, 85b, 85d, 85e, 860, 863, 864, 865, 867, 870, 876, 87a, 87b, 87d, 87f, 889, 88c, 88d, 88f, 890, 892, 894, 895, 896, 89d, 8a5, 8a7, 8aa, 8ae, 8ba, 8bc, 8c0, 8c2, 8c3, 8c4, 8c9, 8cb, 8d4, 8d7, 8d8, 8d9, 8dc, 8de, 8e3, 8e4, 8e7, 8e8, 8f0, 8f1, 8f2, 8f3, 8f4, 8f5, 8f7, 8fb, 8fc, 8fd, 8fe, 901, 903, 907, 909, 90b, 90e, 911, 912, 915, 916, 91a, 91e, 922, 925, 927, 928, 92a, 92c, 933, 938, 939, 93c, 93e, 941, 943, 944, 949, 94a, 94b, 94d, 94f, 950, 951, 952, 959, 95a, 95b, 961, 962, 967, 968, 969, 96e, 96f, 974, 978, 982, 98a, 98c, 98d, 98f, 992, 993, 995, 999, 99a, 9a6, 9a9, 9ae, 9b7, 9be, 9c0, 9c1, 9c3, 9c6, 9c7, 9d1, 9d4, 9d6, 9d8, 9da, 9e0, 9e2, 9e7, 9e8, 9ea, 9ef, 9f0, 9f2, 9f4, 9f5, 9fa, 9fc, 9fe, a01, a03, a04, a05, a06, a07, a0f, a10, a13, a14, a17, a18, a1b, a1c, a1d, a1e, a20, a22, a27, a2a, a2e, a2f, a30, a39, a40, a42, a43, a46, a49, a4a, a52, a57, a5e, a5f, a61, a65, a68, a6a, a70, a72, a76, a78, a7a, a80, a82, a84, a85, a87, a89, a8c, a8d, a90, a91, a93, a94, a98, a9b, a9c, a9e, a9f, aa0, aa6, aab, ab0, ab1, ab2, ab4, ab7, aba, abd, abe, abf, ac0, ac3, ac4, ac5, ac9, aca, acd, acf, ad1, ad2, ad3, ad7, ad8, ada, ade, adf, ae1, ae7, ae8, af1, af2, afc, afe, b00, b01, b02, b08, b09, b0a, b0d, b15, b1e, b26, b2b, b2c, b2e, b32, b33, b39, b3a, b3c, b3f, b40, b41, b43, b44, b47, b4b, b4c, b55, b56, b57, b61, b68, b6a, b6c, b6e, b70, b71, b75, b77, b7b, b7c, b7d, b87, b8b, b8c, b8d, b96, b99, b9a, b9e, ba0, ba3, ba5, ba9, bab, bae, bb1, bbb, bc1, bc5, bc6, bc8, bcb, bd5, bda, bdb, bdc, bde, be0, be1, be5, be7, beb, bed, bf1, bf3, bf4, bfb, bfe, bff, c00, c03, c05, c0a, c0c, c0f, c10, c11, c13, c16, c17, c1c, c1f, c20, c21, c29, c2b, c2d, c2f, c35, c38, c3a, c3d, c3f, c41, c42, c45, c49, c50, c52, c54, c55, c56, c57, c58, c59, c5a, c61, c63, c67, c71, c72, c74, c76, c78, c7a, c7f, c81, c84, c86, c8a, c8c, c92, c97, c9c, ca4, ca5, ca7, ca8, ca9, cae, caf, cb0, cb4, cb9, cbf, cc0, cc1, cce, cd3, cd4, cd5, cdc, cdd, cde, cdf, ce2, ce3, ce5, ce9, cea, ceb, ced, cee, cf0, cf5, cf6, cf7, cf8, cfe, d03, d05, d07, d09, d0f, d10, d11, d12, d19, d1b, d26, d28, d2a, d2c, d2f, d36, d39, d3a, d3b, d3e, d3f, d43, d44, d45, d46, d4b, d4d, d4e, d51, d53, d57, d59, d5c, d5d, d62, d63, d66, d67, d69, d6c, d6e, d73, d74, d7b, d83, d84, d85, d86, d8a, d8e, d92, d95, d99, d9b, d9c, d9e, d9f, da1, da2, da5, da9, dac, dad, db0, db2, db7, db9, dbc, dbd, dbf, dc2, dc4, dc6, dc9, dcd, dce, dd0, dd4, dd5, dd9, de0, de1, de2, de3, de5, de7, de9, df0, df1, df3, df8, df9, dfb, e01, e02, e05, e07, e09, e0e, e0f, e12, e13, e14, e19, e1b, e1d, e21, e25, e26, e28, e2a, e2b, e2d, e2e, e30, e36, e38, e3e, e3f, e40, e43, e44, e48, e49, e4a, e4b, e4f, e50, e52, e59, e5f, e63, e64, e68, e6b, e6c, e70, e71, e7a, e7e, e82, e84, e85, e86, e8a, e8b, e8e, e92, e95, e98, e9f, ea0, ea1, ea2, ea4, ea7, eaf, eb1, eb6, eb7, eb9, ebb, ebc, ec2, ec3, ec4, ec5, ec6, ec9, ecb, ecd, ece, ed3, ed5, ed7, eda, ede, ee0, ee1, ee4, ee7, eeb, eee, ef0, ef7, efa, efc, f01, f02, f03, f04, f07, f0a, f0b, f0c, f0e, f0f, f10, f15, f17, f19, f1a, f1c, f1d, f1e, f1f, f20, f24, f27, f28, f29, f2b, f2c, f2d, f30, f32, f33, f34, f35, f36, f3c, f43, f46, f48, f4f, f55, f5e, f69, f6a, f6c, f6e, f74, f77, f78, f82, f83, f84, f85, f87, f8b, f97, f9a, f9c, f9e, fa1, fa2, fa6, fa9, fad, faf, fb2, fb5, fb6, fbb, fbc, fbf, fc2, fce, fcf, fd4, fd6, fd7, fd8, fda, fdb, fe3, fe5, fe8, feb, ff8, ffc, ffd}
EvalLocalVariableCachedDebug, 000000000274EA80 8 -> {8}
EvalLocalVariableRefCachedDebug, 000000000274EAF0 9 -> {9}
ClearParams, 000000000274BBC0 c -> {c}
CheckClearParams, 000000000274BB60 d -> {d}
PreScriptCall, 000000000274BEB0 e -> {e}
CallBuiltinFunction, 000000000274BA00 f -> {f}
CallBuiltinMethod, 000000000274B930 10 -> {10}
End, 000000000274BCE0 11 -> {11}
EmptyArray, 000000000274F3F0 15 -> {15, bc, 1ab, 1c1, 449, 478, 479, 4b2, 582, 8c8, b28, b46, bb9, ccf, d0d, fea}
WaitTill, 0000000002755510 17 -> {17, c8, 167, 1ac, 568, 6d1, 80b, 9bc, a6e, c15, f31}
ClearFieldVariableOnStack, 000000000274F1E0 19 -> {19, 1e9, 212, 284, 290, 2f3, 2ff, 32f, 405, 42e, 49a, 543, 599, 5cc, 5e0, 74e, 74f, 7ca, 81a, 95c, 979, 97e, bad, be6, cd1, d17, df5, e2c, f3a, fd0}
ClearArray, 000000000274F1A0 1b -> {1b, be, 1e8, 208, 3bb, 463, 516, 6c0, 762, 7b9, 7dd, 871, 8ac, 9a1, 9b4, 9f3, a6f, d49, e23, ea3}
ScriptMethodThreadCallPointer, 000000000274DCA0 1c -> {1c, 145, 1d3, 2b3, 335, 4c7, 524, 5d6, 631, 656, 6ea, 715, 7d6, 825, 931, 9a7, a5a, b21, bd2, bf9, cff, dd2, e20, e51, f7a, f7d}
WaitTillMatchTimeout, 0000000002754420 1d -> {1d, 81, 1f5, 283, 2a3, 3b8, 452, 58a, 60c, 643, 65e, 694, 811, 878, 8a4, 8ef, 8f8, aa4, c70, ccc, cda, d2d, db1, eaa}
GetHash, 0000000002749F00 1f -> {1f, 85, 107, 28f, 3b1, 4b0, 4ba, 4da, 5b3, 63f, 6d2, 7e0, 8a6, 8eb, 904, 96d, a28, a77, aff, be9, c23, c39, c9d, d31, e1f, e69, ed2, ff7}
WaitFrame, 00000000027540D0 20 -> {20, c5, 16d, 20f, 264, 280, 33a, 3b9, 4be, 4e4, 5a3, 716, 765, 898, 914, 96c, a3e, a92, b13, b90, cac, d14, d8c, fab, fb1}
ScriptMethodThreadCallPointerEndOn, 000000000274D7C0 22 -> {22, a2, a6, 1cf, 1da, 2c0, 2e2, 30c, 35e, 37b, 37d, 396, 3c9, 3f6, 4c4, 5ec, 76a, 89f, 8d3, 906, 948, bcf, c6a, c6f, cc9, e9b, fbe}
WaitTillMatch, 0000000002754A00 24 -> {24, 47, 58, 70, dd, 21f, 251, 296, 2d9, 391, 4b7, 503, 57d, 6a0, 7a2, 97d, 991, a48, b58, b9d, bf5, cec, d72, d7c, e47, e93, ef5}
ScriptThreadCallEndOn, 000000000274C900 26 -> {26, fe, 23f, 2a2, 3c8, 4d8, 4eb, 526, 629, 688, 70b, 788, 868, a1f, a64, aeb, bb8, bd3, c4d, d1f, d35, db3, e42, eb3, eb8, f7f, fe2}
Switch, 000000000274B110 29 -> {29, 2a, a0, 2f6, 4b9, 7f5, 83b, 918, 9ad, 9cc, 9f7, ac6, b38, b92, bf7, c02, e87, ee5, f58, f73}
ScriptFunctionCallPointer, 000000000274CDF0 2e -> {2e, 23c, 243, 2ed, 326, 345, 3d1, 424, 440, 447, 454, 473, 541, 5e2, 5fc, 622, 652, 773, 78c, 794, 856, 8a8, 8af, a0a, add, e1e, ecf, fa0, ffe}
DevblockBegin, 0000000002749C50 31 -> {31, 147, 157, 1a9, 1b6, 262, 279, 2c2, 3e5, 44b, 672, 6f4, 85f, 8d2, 92b, 987, 9ca, a29, a71, adc, b3d, bb2, d1d, dee, ef1, f00, f41}
NotEqual, 000000000274AE30 32 -> {32, 28b, 291, 2cf, 2f1, 379, 3cb, 48b, 49d, 51b, 53b, 6f2, 8db, 913, 9ed, d77, d79, de6, e9a, f9d}
ScriptMethodCallPointer, 000000000274D2A0 33 -> {33, 3a, b8, 238, 2be, 342, 638, 9b1, 9b6, a0b, a95, c77, f67}
JumpOnTrue, 000000000274A9B0 34 -> {34, 64, b0, 374, 385, 3ff, 43d, 44c, 4f5, 623, 769, 905, 91c, 958, 9d9, c4e, cfa, d8f, e57}
Unknown35, 0000000002752F50 35 -> {35, 4a, 175, 1c8, 235, 2f8, 3e3, 4a0, 4f7, 552, 604, 7f0, 8c7, 91b, 930, a26, c04, ca1, ddc, ed9}
ScriptMethodThreadCallEndOn, 000000000274DA60 36 -> {36, 172, 38a, 621, 775, a2d, a5c, dbe, f4c, fcb}
SafeCreateLocalVariables, 000000000274C0D0 37 -> {37, 89, 150, 1a8, 261, 26f, 334, 34c, 3cd, 489, 533, 640, 65d, 719, 807, 882, 955, ae5, b2f, bbf, bd4, c6b, c89, dde, e83, ebd, f44, f61, fb7}
GetUndefined38, 000000000274EBF0 38 -> {38, 6f, 72, ca, da, 178, 269, 316, 409, 578, 642, 797, 79d, 7e6, 98e, 997, 99b, b3e, bb0, bdd, d94, db5, ddd, e4e, e58, f4a}
GetNegUnsignedShort, 000000000274A070 39 -> {39, 14e, 1b2, 1f9, 202, 35f, 3db, 3f1, 406, 51a, 714, 76b, 799, 7fa, 815, 85c, 897, 8ce, a37, ad0, af3, b1d, b3b, d64, dff, f7b, fb8}
ClassFunctionCall, 000000000274CB90 3b -> {3b, 5d, 14b, 27e, 29a, 58e, 61a, 70a, 78d, 78f, 850, 8a0, 94c, a8a, b14, ba1, bcc, bf8, cd9, dca, f23}
Return, 000000000274BF00 3c -> {3c, b1, 26c, 288, 36b, 45e, 482, 547, 57e, 68c, 73f, 800, 885, 9ab, 9fb, 9fd, a16, b0b, bee, c07, d34, e4d, f08, f1b, f21, f62, faa, fb4}
EvalFieldVariableRef, 000000000274FCB0 40 -> {40, 7d, 1f0, 29c, 2b7, 487, 4ec, 4ed, 593, 5c0, 69e, 700, 72b, 786, 7ab, 80d, 8df, 9d5, a50, af5, b48, b94, bfc, c06, c1d, e79, e88, ef2, f9f}
SafeDecTop, 00000000027531B0 42 -> {42, 60, 98, b9, 3c6, 67b, 72f, 759, 805, 888, 88e, 902, 920, 946, 96a, a0e, b1a, b1f, eec, fc5}
Bit_Or, 0000000002749920 44 -> {44, 197, 23a, 2de, 350, 3a0, 43b, 56a, 595, 68a, 6e9, 761, 8d1, 940, a6b, deb, ed0, f4e}
ScriptThreadCall, 000000000274E610 45 -> {45, 9d, a4, 1aa, 223, 356, 392, 442, 8cd, 966, a63, abb, b34, b98, d48, d5a, e10, ef4, f53, fdc}
Bit_Xor, 0000000002749980 46 -> {46, 213, 257, 33e, 36e, 4af, 8dd, 937, 956, 9c9, af7, b76, b79, c5c, c5e, c75, c83, d41, dc1}
GetSelfObject, 0000000002750800 49 -> {49, 59, 5a, 6b, 125, 129, 196, 3f5, 472, 4e7, 54d, 571, 62e, 6e8, 756, 7bf, 8ad, 91d, a2c, a38, d47, ea5, f11, f81, f96, fa4, fdd}
GetNegByte, 0000000002749FC0 4b -> {4b, 199, 21e, 29d, 3b6, 42d, 549, 583, 6a3, 8ec, 9e5, a24, a3f, bd9, c19, c79, ca2, cb7, d78, d81, dfc, e62, f22, f5a, fd2}
ScriptThreadCallPointerEndOn, 000000000274C690 4c -> {4c, 57, 162, 35a, 35d, 371, 375, 414, 468, 4b3, 4dd, 5f1, 693, 6c6, 720, 77c, 7e2, 824, 82e, c30, d5e, e03, e66, e94, fc4}
BoolComplement, 00000000027499D0 4d -> {4d, 13a, 3b7, 42a, 514, 573, 5d0, 5f4, 668, 71b, 89e, 8b4, 9d7, a88, ac7, cf2, e33, e5d, ead}
IsDefined, 0000000002752800 4e -> {4e, 77, 38c, 3c3, 3ee, 481, 55c, 565, 5d2, 5dd, 5e4, 736, 74d, 79c, 7f1, 841, 94e, aec, b20, b36, b51, b93, c08, c14, c26, e74, f5d, f79}
AddToArray, 000000000274ED50 51 -> {51, 119, 146, 180, 4e1, 510, 60a, 64f, 6d5, 777, 986, a60, af4, c7c, e60, fae}
Wait, 0000000002755920 54 -> {54, 10c, 17d, 324, 3e6, 67d, 6ec, 809, 923, c5b, c64, ded, e5a, ee9, f49, f5f, fc0}
SuperEqual, 000000000274AFD0 55 -> {55, cc, 1bd, 30b, 31c, 361, 4a4, 522, 7b7, 7e1, 8c5, 93a, 9b0, 9c5, a3d, a45, a69, b72, bdf, d27, d6a, d8b, dae, dd1, dd8, e16, ed4, f3b, f4d, ff6}
GetUndefined56, 000000000274A240 56 -> {56, 1a3, 1cd, 358, 739, 84a, 9f6, b6b, def, e3c, f92, fa5, ff4}
ScriptFunctionThreadCall, 000000000274D080 5c -> {5c, 68, a7, 17e, 24c, 327, 37c, 75c, 814, 834, 880, 97f, ac8, bb6, c0e, c9b, cb5, cf1, de4, eca, fd3}
EvalFieldVariableOnStackRef, 000000000274FA60 5f -> {5f, 65, 93, 1d2, 219, 28c, 40e, 448, 450, 4d5, 6ac, 877, 970, 97a, 9b5, b31, bc7, c4f, db4, e15, e8c, e96, f64}
JumpOnTrueExpr, 000000000274A910 61 -> {61, 10a, 170, 17c, 2a9, 2fc, 303, 3bd, 618, 69f, 7bb, 8fa, 9f1, a6d, af6, b12, b27, be8, bfa, ca6, cc7, e1c, e78, ef8, f06, f98}
CreateArray, 000000000274F260 62 -> {62, 1fb, 255, 2fb, 39c, 461, 505, 58d, 6ba, 6ff, 75d, 832, 8e0, 9c8, 9cb, 9e3, ab6, b5c, b63, b83, bce, c09, d1c, d58, e37, e5e, f70, f7c}
Inc, 000000000274A610 63 -> {63, 8f, 1fe, 304, 35c, 36d, 3ba, 4cf, 4f1, 5aa, 7eb, 8b3, a7e, b19, dc8, f51, fb0}
ShiftLeft, 000000000274AEF0 6a -> {6a, b4, 179, 186, 249, 3b0, 3d4, 465, 483, 49c, 4b6, 584, 654, 6e4, 6f1, 75f, 85a, 9a8, aea, aed, b03, b30, ba6, c48, c7e, cc8, cd7, d06, e34, fc6}
JumpOnGreaterThan, 000000000274AB10 6c -> {6c, 102, 164, 389, 435, 5b7, 650, 6c8, 796, 7b5, 953, c9e, ce7, e0b, e6e, e7c}
Plus, 000000000274AE90 6e -> {6e, ae, 104, 106, 144, 2a6, 323, 51f, 596, 59a, 59e, 8e6, 975, a56, b4d, b54, bac, d7e, ef3, fca}
CastAndEvalFieldVariable, 000000000274EFE0 71 -> {71, 32b, 340, 512, 7a3, 80a, 8e1, b4a, b7e, baa, bd7, cd2, e41, edd, f80}
ShiftRight, 000000000274AF50 76 -> {76, 24a, 366, 3d3, 6b9, 707, 7fe, 86b, 8ed, a02, a35, ab5, da4, f71, fba}
CreateStruct, 000000000274F2F0 78 -> {78, 1eb, 201, 2bc, 3f9, 455, 52b, 65f, 679, 72c, 873, 8b5, a66, bc2, d75, dc7, e00, eb0}
CastCanon, 0000000002749A90 7a -> {7a, d7, 15f, 265, 2b4, 2b6, 2f4, 39b, 5db, 722, 730, 7da, 8d0, 9a3, 9d3, be2, c27}
GreaterThanOrEqualTo, 000000000274A540 7b -> {7b, 211, 29f, 315, 4c8, 5e9, 5eb, 69a, 87e, a83, ad4, b07, b10, b8e, b91, cbd, d70, f14, f45, fed}
SetVariableFieldRef, 000000000274FBC0 7c -> {7c, f7, 133, 154, 1ff, 388, 492, 57a, 8a2, 8d5, 954, a33, c47, c96, d55, d6b, e6f, f40}
GetUIntPtr, 000000000274A1E0 7e -> {7e, f9, 2c3, 35b, 3e8, 410, 47b, 525, 5a0, 5cb, 70c, a47, b60, d15, d22, edf, f76}
GetLongInteger, 0000000002749F60 82 -> {82, 13d, 1df, 377, 39f, 602, 662, 69b, 801, 804, 9af, 9eb, a4f, afa, b42, b67, b73, b81, c0b, c4b, ca3, d8d, db8, e17, e65}
EvalArray, 000000000274F9E0 8a -> {8a, 12a, 1de, 278, 2df, 36c, 496, 4f8, 50e, 5ed, 65a, 6a2, 6eb, 9e4, 9ec, a11, ae4, af9, afd, c24, c2c, dda, df2, e11, f09, f6d}
WaitTillFrameEnd, 0000000002754200 8b -> {8b, 11e, 285, 2ab, 2c1, 390, 3e0, 64d, 79f, 89a, 8a9, 8ab, 976, 9ff, b65, b6d, b80, bf0, c2a, c37, c80, ddf, e08}
EndOnCallback, 00000000027535C0 8c -> {8c, d4, 56e, 605, 908, 9c4, 9ce, b9f, bd1, efd}
FirstArrayKey, 00000000027502D0 8d -> {8d, 22d, 30e, 57c, 78a, 899, 964, a23, b8a, d01, df6, fc7}
SetVariableField, 0000000002753340 8e -> {8e, f3, 21b, 28e, 2ee, 830, 831, 9bf, a96, bcd, bd6, c18, d08, d9a, da6, f8f, fd9, fec}
EndOn, 00000000027539C0 91 -> {91, b5, e6, 10d, 237, 246, 272, 341, 40d, 45b, 45d, 4d2, 667, 6be, 6e6, 6ee, 734, 80c, 92f, 960, a7d, acb, b89, c1a, d1a, d23, d9d, e0d, fa7}
SuperNotEqual, 000000000274B050 92 -> {92, 13e, 1ce, 2a5, 359, 426, 61c, 725, a99, b18, b5a, d90}
GetFloat, 0000000002749EA0 94 -> {94, 100, 183, 1e2, 20a, 381, 3d8, 3e4, 598, 5ad, 630, 70f, 74a, 7a5, 7ea, 883, 8f9, aa7, b50, b7f, ce1, d3d, e39, f52, fc9}
ProfileStart, 0000000002749880 95 -> {95, ba, 1d0, 228, 242, 2bd, 556, 5bf, 62d, 6cf, 7ee, 82d, a3a, a5d, aa5, aa9, ace, ad6, ba7, bc0, d89, dbb, dc0, e04, e80, ec8, f5b, fe0}
GetString, 000000000274A0D0 96 -> {96, 1b0, 217, 231, 2af, 2d6, 380, 467, 601, 608, 6c1, 8b0, 9de, c44, d4c, ff1}
BoolNot, 0000000002749A10 9a -> {9a, 13c, 19a, 1d8, 220, 566, 606, 6b2, 7d1, aac, c6c, da0, e73, eab, f39, f3e, f5c, fd1, ff0, ffa}
CastBool, 0000000002749A50 9b -> {9b, ed, 11b, 152, 1c4, 364, 464, 49e, 537, 585, 681, 78b, 881, 90c, 9e1, a32, a4b, a59, a5b, c3b, cb8, e3a, eff}
Unknown9e, 000000000274F550 9e -> {9e, e7, 1a5, 1b1, 1f8, 274, 287, 28d, 31a, 372, 3fa, 40b, 41e, 4f3, 6ad, 6b1, 6d7, 839, 988, a74, b66, b82, bc4, c34, c7d, cbc, d0e, f18, f8a, fc1}
Equal, 0000000002749E00 9f -> {9f, 11c, 21d, 24e, 2e5, 531, 5bb, 627, 717, 7db, 93f, 95e, aa8, b0c, c8f, ddb, ea8, f2e}
GetUnsignedInteger, 000000000274A280 a1 -> {a1, 15a, 1bf, 330, 44e, 591, 5d9, 637, 768, 76d, 7fd, 80e, 879, 90a, 972, d1e, d6d, d6f, df7, e91, f2a}
WaittillTimeout, 0000000002754F70 a9 -> {a9, b7, 149, 189, 198, 293, 360, 3f8, 57b, 5f8, 703, 723, 7d8, 81b, 859, 8b8, 989, 9f8, a79, b59, baf, bbd, be3, d71, db6, df4, eb2, f8d}
Unknownad, 0000000002753120 ad -> {ad, 10f, 12d, 141, 696, 77d, a3c, b2a, bfd, dcb, fbd}
GreaterThan, 000000000274A5C0 bb -> {bb, 110, 2dd, 3cf, 3f7, 4d1, 534, 5b2, 8bd, a19, b5b, cb3, dab, f25, fb3}
Jump, 000000000274AA70 c0 -> {c0, 151, 16a, 502, 5c8, 5f9, 73a, 75a, 86d, 8ca, 900, 924, 942, 9d0, af8, caa, cdb, dcc, dfe, fe9}
Divide, 0000000002749CB0 c1 -> {c1, 2ca, 3c0, 469, 486, 826, 9e6, c90, e61, ea9, fe4}
EndSwitch, 0000000002749D50 c2 -> {c2, 200, 23e, 2ef, 314, 386, 394, 40f, 41f, 43e, 462, 46d, 4b5, 574, 6d3, 792, 7a9, 7f8, 7fb, 81f, 86e, ad9, b53, c3e, cc2, e45, f4b, fef}
Unknownc4, 0000000002753230 c4 -> {c4, cf, d0, 224, 26e, 2a8, 337, 349, 365, 4a2, 4f2, 54e, 647, 72e, 760, 91f, 998, 99e, a6c, a8f, b6f, c82, ec1, f59, fa8}
Unknownc7, 0000000002752D40 c7 -> {c7, 3a7, 50c, 567, 624, 67c, 708, 776, 778, 780, 842, 88a, 8bb, a2b, a7c, ae2, ae9, ba4, bb5, c43, daf, dcf, e46, e54, e6d, eae, eb5, f99}
JumpOnFalse, 000000000274A820 c9 -> {c9, 1c2, 204, 2d3, 3cc, 3dc, 430, 4e0, 6b6, 6da, 757, 7dc, a08, b25, b4e, c1b, cc4, dfd, e22, e77, e8d, f0d, f12, fee}
JumpOnFalseExpr, 000000000274A780 ce -> {ce, 275, 347, 594, 59d, 63a, 95d, 996, 9db, afb, b23, b84, cd0, d20, d5b, e35, e67, e90, ea6, f7e}
EvalSelfFieldVariable, 00000000027506F0 d3 -> {d3, 134, 1f7, 46f, 59c, 657, 66b, 774, 88b, 8a3, 93b, aaf, bb7, c2e, cca, ce8, d91}
Minus, 000000000274ACF0 d9 -> {d9, 13b, 22a, 395, 520, 536, 6ae, 6fe, 771, 86a, 963, a97, b1c, b24, bc3, bc9, e5c, e7f, f68, fdf}
ProfileStop, 0000000002749D10 dc -> {dc, 20d, 59b, 875, 99f, a51, c6d, ce0, f50, f60, fcd}
GetInteger, 000000000274A010 e1 -> {e1, 1ec, 321, 3f2, 471, 4c9, 4df, 58b, 635, 749, 803, 837, 935, 95f, 9d2, a0d, a12, a9a, e97, e9d, eb4, f65}
ClassFunctionThreadCall, 000000000274E160 e3 -> {e3, 114, 1a1, 1d6, 3b5, 451, 50a, 53e, 5fd, 6b4, 709, 793, a55, a81, aad, b69, bd0, c46, cbe, d25, d61, d7f, de8, ebf, ee8, eed, f6f}
VectorScale, 000000000274B3E0 e4 -> {e4, 1f3, 2e7, 344, 3a2, 4a1, 4bd, 513, 542, 55d, 747, 790, 869, 926, 9bb, a15, a7b, b52, d37, e56, efe}
Modulus, 000000000274AD50 e9 -> {e9, 1a6, 1c9, 22b, 294, 300, 30f, 3be, 40c, 5e5, 5ea, 62f, 649, 66e, 712, 7ad, 7ef, 945, 973, 9bd, b5d, bca, c51, c87, d0c, d82, ebe, f37, f75, f86}
VectorConstant, 000000000274B2E0 ea -> {ea, 105, 177, 415, 4c0, 8e9, 921, a75, ae3, b2d, e9c, ef9}
SizeOf, 00000000027533E0 eb -> {eb, 184, 1d9, 241, 27c, 2e1, 34b, 357, 55b, 727, 7a7, 7c8, 816, 89c, a0c, a67, aee, b22, c62, e0c}
Notify, 0000000002753E60 f0 -> {f0, 207, 2a7, 2eb, 3c4, 403, 625, 67e, 82a, 9dd, c66, cb2, dc3, dc5, f2f, f3d}
CreateVector, 000000000274B540 f2 -> {f2, 112, 34e, 3fd, 6ed, 781, 7e9, 81d, 8a1, a44, b88, d4a, e7d, f38, f72}
Dec, 0000000002749B10 f5 -> {f5, 165, 1f6, 295, 31e, 3de, 41b, 4a7, 4d3, 645, 752, 779, 77a, 82c, 9df, b04, b5e, b7a, b85, b95, bec, cba, ccd, daa, e55, e99, ec0, f93}
JumpOnLessThan, 000000000274A440 fb -> {fb, 130, 190, 48d, 572, 646, 663, 744, 861, 86f, 886, b0f, bbe, bf2, c25, cf3, d18, edc, fd5}
Bit_And, 00000000027498C0 fd -> {fd, 4fd, 684, 6b7, 6bb, 6d4, c12, c9a, d54, e24, fe7}
GetObjectType, 0000000002752910 101 -> {101, 194, 276, 2fe, 34a, 3b2, 40a, 47c, 58c, 644, 655, 721, 7f6, 828, 843, 934, 9b3, 9b9, aa2, cd6, cfd, d33, d7a, da3, e6a, f89, fff}
Multiply, 000000000274ADB0 113 -> {113, 206, 2ad, 3ce, 433, 484, 4d0, 529, 617, 673, 6c5, 76c, 7d0, 89b, 9f9, a1a, a36, b37, ba2, c8e, cc6, cfb, d00, d88, e27, e4c, f95, ffb}
EvalFieldVariableOnStack, 000000000274FAC0 116 -> {116, 118, 16f, 2dc, 3b3, 3fb, 4b4, 6df, 770, 7c3, 917, a41, ca0, ee6}
GetTime, 00000000027508F0 117 -> {117, 137, 19d, 253, 376, 45f, 475, 4a5, 4a6, 4c2, 4ef, 5a9, 753, 7c9, 9ba, c53, cd8, d02, da8}
SetLocalVariableCached, 0000000002750150 11d -> {11d, 1c0, 1e4, 1ee, 3e7, 4f0, 60f, 683, 687, 910, 936, 9a0, d16, d38, d80, dba}
AddToStruct, 000000000274EE90 11f -> {11f, 1db, 5ac, 71a, ad5, c5d, c9f, cbb, d2b, d30}
ClassFunctionThreadCallEndOn, 000000000274C430 120 -> {120, 17f, 210, 401, 4b8, 530, 5ba, 66a, 690, 6b8, 82f, 8b9, 8be, 8d6, 8ee, 984, 9b2, a25, cab, d21, ecc, eea}
LessThanOrEqualTo, 000000000274AC10 122 -> {122, 182, 2b1, 2e6, 333, 3ed, 446, 560, 5b4, 5c4, 5d7, 68d, 6fa, 985, 9a4, c1e, c5f, c88, d76, e31, e8f}
FirstArrayKeyCached, 000000000274FE90 123 -> {123, 1d4, 1dc, 7f9, 866, ab8, b5f, bea, c40, d29, dfa, e7b, ed6}
Unknown10e, 0000000002749AD0 10e -> {10e, 1d7, 3e9, 418, 557, 798, 7aa, 874, 977, b29, e0a, e18}
Unknown126, 000000000274B2A0 126 -> {126, 142, 169, 21c, 2b9, 417, 4ca, 52f, 60b, 6ef, 7be, 862, 893, 8da, 9dc, a4e, a7f, aa3, d68, dd6, e81, eac, f94}
GetGlobal, 00000000027505F0 12c -> {12c, 4f9, 5ae, 6cd, 755, 7e4, 872, 980, 994, aaa, abc, aef, af0, b74, bbc, bf6, c33, dec, e72, f13, fb9}
GetZero, 000000000274A3A0 136 -> {136, 2c5, 56d, 5e1, 8e5, 9aa, a8b, b16, c28, d87, fa3}
EvalLocalVariableRefCached, 0000000002750290 138 -> {138, 236, 33d, 4a3, 53c, 589, 5a5, 5a8, 686, 6f5, 6fd, 957, a21, a3b, a86, adb, b0e, b49, c65, cf4, d50, e32, e5b, ec7, fde}
ClearFieldVariable, 000000000274F210 14c -> {14c, 27d, 4fb, 50d, 586, 5d4, 67f, 766, 852, 8bf, 97b, b8f, b97, ce6, d3c, d7d, d96, e06, e2f, f6b, ff3}
EvalGlobalObjectFieldVariable, 00000000027504F0 155 -> {155, 1ba, 25c, 25d, 2f2, 436, 47d, 48f, 4c5, 50b, 5fb, 616, 729, 7f7, 891, 8b1, 90d, 98b, 9a5, b45, bb3, d0a, d2e, d60, f47}
EvalFieldObjectFromRef, 000000000274FDD0 168 -> {168, 171, 1b4, 2bf, 4d7, 509, 675, 6ab, 810, 87c, 8c6, 9e9, a58, b9b, ba8, c22, e3b}
GetSelf, 0000000002750880 16e -> {16e, 1be, 205, 209, 252, 25a, 260, 5de, 653, 72a, 763, 767, 83a, 844, 846, a54, b4f, cf9, da7, e76, f56, f88}
GetAPIFunction, 0000000002750470 181 -> {181, 222, 230, 232, 2aa, 2e0, 34d, 402, 434, 4db, 4e6, 558, 670, 6f7, 745, 74c, 7d3, 86c, 8c1, 9ee, a62, a8e, c01, c4a, cb6, cc3, f42, fcc}
GetGlobalObject, 0000000002750580 187 -> {187, 1bb, 250, 2db, 30a, 338, 39d, 470, 4bb, 4ea, 51c, 54c, 5da, 60d, 6a5, 6a9, 8f6, 8ff, 92e, 947, b1b, c4c, d24, e29, eef, efb, f26}
GetByte, 0000000002749E50 18a -> {18a, 1ed, 476, 544, 5a6, 680, 692, 9c2, a73, c95, d93, ed8, f9b}
CastFieldObject, 000000000274F0F0 18e -> {18e, 193, 1f1, 39e, 3dd, 42f, 45c, 4aa, 5b6, 5e3, 607, 791, 7ff, 82b, 8b7, 97c, b62, c69, c7b, c98, c99, ccb, d40, d42}
EvalLocalVariableDefined, 0000000002750000 192 -> {192, 1e3, 24f, 270, 2f7, 48a, 63d, 789, 7c1, 932, ab3, b17, bd8, c68, cef, d0b, d56, d98}
ScriptThreadCallPointer, 000000000274E3B0 1c5 -> {1c5, 1f2, 21a, 325, 33b, 397, 3eb, 499, 52d, 71d, 74b, 7a1, 84c, 9ac, 9b8, a4d, ac1, b05, c6e, d04, d5f, dd7, e89, eba, fc3, fe1}
LessThan, 000000000274AC90 1c6 -> {1c6, 399, 54f, 5bd, 62a, 787, 92d, 93d, 99d, ab9, bba, c36, e9e, fac}
ScriptMethodCall, 000000000274D570 1e6 -> {1e6, 36f, 425, 6c4, 705, 7f2, 8b2, 8b6, 983, a4c, b78, cad, d52}
DecTop, 000000000274F370 1f4 -> {1f4, 53f, 561, 597, 732, 851, 8cf, 965, 99c, dd3, ee2, ef6, f3f, f91}
GetVector, 000000000274A340 22f -> {22f, 3fc, 628, 702, 981, 9cd, a00, b11, f57, f90}
ScriptMethodThreadCall, 000000000274DF20 248 -> {248, 53d, 590, 78e, 83d, a34, be4, c93, cc5, d97, e75}
SetNextArrayKeyCached, 0000000002752AC0 26b -> {26b, 320, 331, 383, 491, 4c1, 4fc, 564, 610, 71e, 72d, 80f, 8ea, 929, 971, 990, 9cf, aa1, ae0, bb4, bef, c8b, cfc, e3d, e53, ee3, f54, f66, fc8, ff5}
JumpPush, 000000000274EBA0 2d2 -> {2d2, 3ab, 61e, 70e, 90f, c31, c32, c94, f8c, ff9}
GetUnsignedShort, 000000000274A2E0 307 -> {307, 312, 354, 428, 4cc, 5c2, 64b, 735, 7c6, 96b, a09, a53, acc, b86, c0d, c73, d13, d65, f63, ff2}
EvalLocalVariableCached, 0000000002750210 332 -> {332, 3ae, 528, 5ca, 5d1, 689, 6b5, 741, 829, 8cc, 8e2, 919, a31, ac2, c3c, c60, c8d, d32, f8e}
EvalArrayRef, 000000000274F7C0 3c1 -> {3c1, 3da, 4a8, 4ce, 527, 5c9, 6a8, 782, 884, 887, 9a2, a9d, aae, ae6, b06, b35, c85, ce4, dea, f05, fe6}
EvalFieldVariable, 000000000274FD20 400 -> {400, 4a9, 548, 551, 68b, 746, 7b3, 7c4, d4f, e1a, ed1}
GetFunction, 0000000002750410 432 -> {432, 5d8, 6a1, 718, b64, b9c, c91, cb1, edb, f16}